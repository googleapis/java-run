// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/run/v2/execution.proto

package com.google.cloud.run.v2;

public interface ListExecutionsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.run.v2.ListExecutionsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The Execution from which the Executions should be listed.
   * To list all Executions across Jobs, use "-" instead of Job name.
   * Format: projects/{project}/locations/{location}/jobs/{job}, where {project}
   * can be project id or number.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   * <pre>
   * Required. The Execution from which the Executions should be listed.
   * To list all Executions across Jobs, use "-" instead of Job name.
   * Format: projects/{project}/locations/{location}/jobs/{job}, where {project}
   * can be project id or number.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * Maximum number of Executions to return in this call.
   * </pre>
   *
   * <code>int32 page_size = 2;</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * A page token received from a previous call to ListExecutions.
   * All other parameters must match.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   * <pre>
   * A page token received from a previous call to ListExecutions.
   * All other parameters must match.
   * </pre>
   *
   * <code>string page_token = 3;</code>
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();

  /**
   * <pre>
   * If true, returns deleted (but unexpired) resources along with active ones.
   * </pre>
   *
   * <code>bool show_deleted = 4;</code>
   * @return The showDeleted.
   */
  boolean getShowDeleted();
}
