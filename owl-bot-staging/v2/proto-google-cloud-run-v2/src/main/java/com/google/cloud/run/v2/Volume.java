// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/run/v2/k8s.min.proto

package com.google.cloud.run.v2;

/**
 * <pre>
 * Volume represents a named volume in a container.
 * </pre>
 *
 * Protobuf type {@code google.cloud.run.v2.Volume}
 */
public final class Volume extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.run.v2.Volume)
    VolumeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Volume.newBuilder() to construct.
  private Volume(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Volume() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Volume();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Volume(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.cloud.run.v2.SecretVolumeSource.Builder subBuilder = null;
            if (volumeTypeCase_ == 2) {
              subBuilder = ((com.google.cloud.run.v2.SecretVolumeSource) volumeType_).toBuilder();
            }
            volumeType_ =
                input.readMessage(com.google.cloud.run.v2.SecretVolumeSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.cloud.run.v2.SecretVolumeSource) volumeType_);
              volumeType_ = subBuilder.buildPartial();
            }
            volumeTypeCase_ = 2;
            break;
          }
          case 26: {
            com.google.cloud.run.v2.CloudSqlInstance.Builder subBuilder = null;
            if (volumeTypeCase_ == 3) {
              subBuilder = ((com.google.cloud.run.v2.CloudSqlInstance) volumeType_).toBuilder();
            }
            volumeType_ =
                input.readMessage(com.google.cloud.run.v2.CloudSqlInstance.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.cloud.run.v2.CloudSqlInstance) volumeType_);
              volumeType_ = subBuilder.buildPartial();
            }
            volumeTypeCase_ = 3;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.run.v2.K8sMinProto.internal_static_google_cloud_run_v2_Volume_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.run.v2.K8sMinProto.internal_static_google_cloud_run_v2_Volume_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.run.v2.Volume.class, com.google.cloud.run.v2.Volume.Builder.class);
  }

  private int volumeTypeCase_ = 0;
  private java.lang.Object volumeType_;
  public enum VolumeTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SECRET(2),
    CLOUD_SQL_INSTANCE(3),
    VOLUMETYPE_NOT_SET(0);
    private final int value;
    private VolumeTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VolumeTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static VolumeTypeCase forNumber(int value) {
      switch (value) {
        case 2: return SECRET;
        case 3: return CLOUD_SQL_INSTANCE;
        case 0: return VOLUMETYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public VolumeTypeCase
  getVolumeTypeCase() {
    return VolumeTypeCase.forNumber(
        volumeTypeCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Required. Volume's name.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. Volume's name.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECRET_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Secret represents a secret that should populate this volume.
   * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   * </pre>
   *
   * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
   * @return Whether the secret field is set.
   */
  @java.lang.Override
  public boolean hasSecret() {
    return volumeTypeCase_ == 2;
  }
  /**
   * <pre>
   * Secret represents a secret that should populate this volume.
   * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   * </pre>
   *
   * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
   * @return The secret.
   */
  @java.lang.Override
  public com.google.cloud.run.v2.SecretVolumeSource getSecret() {
    if (volumeTypeCase_ == 2) {
       return (com.google.cloud.run.v2.SecretVolumeSource) volumeType_;
    }
    return com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance();
  }
  /**
   * <pre>
   * Secret represents a secret that should populate this volume.
   * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   * </pre>
   *
   * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.run.v2.SecretVolumeSourceOrBuilder getSecretOrBuilder() {
    if (volumeTypeCase_ == 2) {
       return (com.google.cloud.run.v2.SecretVolumeSource) volumeType_;
    }
    return com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance();
  }

  public static final int CLOUD_SQL_INSTANCE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * For Cloud SQL volumes, contains the specific instances that should be
   * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
   * more information on how to connect Cloud SQL and Cloud Run.
   * </pre>
   *
   * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
   * @return Whether the cloudSqlInstance field is set.
   */
  @java.lang.Override
  public boolean hasCloudSqlInstance() {
    return volumeTypeCase_ == 3;
  }
  /**
   * <pre>
   * For Cloud SQL volumes, contains the specific instances that should be
   * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
   * more information on how to connect Cloud SQL and Cloud Run.
   * </pre>
   *
   * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
   * @return The cloudSqlInstance.
   */
  @java.lang.Override
  public com.google.cloud.run.v2.CloudSqlInstance getCloudSqlInstance() {
    if (volumeTypeCase_ == 3) {
       return (com.google.cloud.run.v2.CloudSqlInstance) volumeType_;
    }
    return com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance();
  }
  /**
   * <pre>
   * For Cloud SQL volumes, contains the specific instances that should be
   * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
   * more information on how to connect Cloud SQL and Cloud Run.
   * </pre>
   *
   * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.run.v2.CloudSqlInstanceOrBuilder getCloudSqlInstanceOrBuilder() {
    if (volumeTypeCase_ == 3) {
       return (com.google.cloud.run.v2.CloudSqlInstance) volumeType_;
    }
    return com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (volumeTypeCase_ == 2) {
      output.writeMessage(2, (com.google.cloud.run.v2.SecretVolumeSource) volumeType_);
    }
    if (volumeTypeCase_ == 3) {
      output.writeMessage(3, (com.google.cloud.run.v2.CloudSqlInstance) volumeType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (volumeTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.cloud.run.v2.SecretVolumeSource) volumeType_);
    }
    if (volumeTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.cloud.run.v2.CloudSqlInstance) volumeType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.run.v2.Volume)) {
      return super.equals(obj);
    }
    com.google.cloud.run.v2.Volume other = (com.google.cloud.run.v2.Volume) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getVolumeTypeCase().equals(other.getVolumeTypeCase())) return false;
    switch (volumeTypeCase_) {
      case 2:
        if (!getSecret()
            .equals(other.getSecret())) return false;
        break;
      case 3:
        if (!getCloudSqlInstance()
            .equals(other.getCloudSqlInstance())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    switch (volumeTypeCase_) {
      case 2:
        hash = (37 * hash) + SECRET_FIELD_NUMBER;
        hash = (53 * hash) + getSecret().hashCode();
        break;
      case 3:
        hash = (37 * hash) + CLOUD_SQL_INSTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getCloudSqlInstance().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.run.v2.Volume parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.run.v2.Volume parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.run.v2.Volume parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.run.v2.Volume parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.run.v2.Volume prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Volume represents a named volume in a container.
   * </pre>
   *
   * Protobuf type {@code google.cloud.run.v2.Volume}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.run.v2.Volume)
      com.google.cloud.run.v2.VolumeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.run.v2.K8sMinProto.internal_static_google_cloud_run_v2_Volume_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.run.v2.K8sMinProto.internal_static_google_cloud_run_v2_Volume_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.run.v2.Volume.class, com.google.cloud.run.v2.Volume.Builder.class);
    }

    // Construct using com.google.cloud.run.v2.Volume.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      volumeTypeCase_ = 0;
      volumeType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.run.v2.K8sMinProto.internal_static_google_cloud_run_v2_Volume_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.run.v2.Volume getDefaultInstanceForType() {
      return com.google.cloud.run.v2.Volume.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.run.v2.Volume build() {
      com.google.cloud.run.v2.Volume result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.run.v2.Volume buildPartial() {
      com.google.cloud.run.v2.Volume result = new com.google.cloud.run.v2.Volume(this);
      result.name_ = name_;
      if (volumeTypeCase_ == 2) {
        if (secretBuilder_ == null) {
          result.volumeType_ = volumeType_;
        } else {
          result.volumeType_ = secretBuilder_.build();
        }
      }
      if (volumeTypeCase_ == 3) {
        if (cloudSqlInstanceBuilder_ == null) {
          result.volumeType_ = volumeType_;
        } else {
          result.volumeType_ = cloudSqlInstanceBuilder_.build();
        }
      }
      result.volumeTypeCase_ = volumeTypeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.run.v2.Volume) {
        return mergeFrom((com.google.cloud.run.v2.Volume)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.run.v2.Volume other) {
      if (other == com.google.cloud.run.v2.Volume.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      switch (other.getVolumeTypeCase()) {
        case SECRET: {
          mergeSecret(other.getSecret());
          break;
        }
        case CLOUD_SQL_INSTANCE: {
          mergeCloudSqlInstance(other.getCloudSqlInstance());
          break;
        }
        case VOLUMETYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.run.v2.Volume parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.run.v2.Volume) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int volumeTypeCase_ = 0;
    private java.lang.Object volumeType_;
    public VolumeTypeCase
        getVolumeTypeCase() {
      return VolumeTypeCase.forNumber(
          volumeTypeCase_);
    }

    public Builder clearVolumeType() {
      volumeTypeCase_ = 0;
      volumeType_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Required. Volume's name.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. Volume's name.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. Volume's name.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Volume's name.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Volume's name.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.run.v2.SecretVolumeSource, com.google.cloud.run.v2.SecretVolumeSource.Builder, com.google.cloud.run.v2.SecretVolumeSourceOrBuilder> secretBuilder_;
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     * @return Whether the secret field is set.
     */
    @java.lang.Override
    public boolean hasSecret() {
      return volumeTypeCase_ == 2;
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     * @return The secret.
     */
    @java.lang.Override
    public com.google.cloud.run.v2.SecretVolumeSource getSecret() {
      if (secretBuilder_ == null) {
        if (volumeTypeCase_ == 2) {
          return (com.google.cloud.run.v2.SecretVolumeSource) volumeType_;
        }
        return com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance();
      } else {
        if (volumeTypeCase_ == 2) {
          return secretBuilder_.getMessage();
        }
        return com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    public Builder setSecret(com.google.cloud.run.v2.SecretVolumeSource value) {
      if (secretBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        volumeType_ = value;
        onChanged();
      } else {
        secretBuilder_.setMessage(value);
      }
      volumeTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    public Builder setSecret(
        com.google.cloud.run.v2.SecretVolumeSource.Builder builderForValue) {
      if (secretBuilder_ == null) {
        volumeType_ = builderForValue.build();
        onChanged();
      } else {
        secretBuilder_.setMessage(builderForValue.build());
      }
      volumeTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    public Builder mergeSecret(com.google.cloud.run.v2.SecretVolumeSource value) {
      if (secretBuilder_ == null) {
        if (volumeTypeCase_ == 2 &&
            volumeType_ != com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance()) {
          volumeType_ = com.google.cloud.run.v2.SecretVolumeSource.newBuilder((com.google.cloud.run.v2.SecretVolumeSource) volumeType_)
              .mergeFrom(value).buildPartial();
        } else {
          volumeType_ = value;
        }
        onChanged();
      } else {
        if (volumeTypeCase_ == 2) {
          secretBuilder_.mergeFrom(value);
        } else {
          secretBuilder_.setMessage(value);
        }
      }
      volumeTypeCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    public Builder clearSecret() {
      if (secretBuilder_ == null) {
        if (volumeTypeCase_ == 2) {
          volumeTypeCase_ = 0;
          volumeType_ = null;
          onChanged();
        }
      } else {
        if (volumeTypeCase_ == 2) {
          volumeTypeCase_ = 0;
          volumeType_ = null;
        }
        secretBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    public com.google.cloud.run.v2.SecretVolumeSource.Builder getSecretBuilder() {
      return getSecretFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    @java.lang.Override
    public com.google.cloud.run.v2.SecretVolumeSourceOrBuilder getSecretOrBuilder() {
      if ((volumeTypeCase_ == 2) && (secretBuilder_ != null)) {
        return secretBuilder_.getMessageOrBuilder();
      } else {
        if (volumeTypeCase_ == 2) {
          return (com.google.cloud.run.v2.SecretVolumeSource) volumeType_;
        }
        return com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Secret represents a secret that should populate this volume.
     * More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * </pre>
     *
     * <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.run.v2.SecretVolumeSource, com.google.cloud.run.v2.SecretVolumeSource.Builder, com.google.cloud.run.v2.SecretVolumeSourceOrBuilder> 
        getSecretFieldBuilder() {
      if (secretBuilder_ == null) {
        if (!(volumeTypeCase_ == 2)) {
          volumeType_ = com.google.cloud.run.v2.SecretVolumeSource.getDefaultInstance();
        }
        secretBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.run.v2.SecretVolumeSource, com.google.cloud.run.v2.SecretVolumeSource.Builder, com.google.cloud.run.v2.SecretVolumeSourceOrBuilder>(
                (com.google.cloud.run.v2.SecretVolumeSource) volumeType_,
                getParentForChildren(),
                isClean());
        volumeType_ = null;
      }
      volumeTypeCase_ = 2;
      onChanged();;
      return secretBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.run.v2.CloudSqlInstance, com.google.cloud.run.v2.CloudSqlInstance.Builder, com.google.cloud.run.v2.CloudSqlInstanceOrBuilder> cloudSqlInstanceBuilder_;
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     * @return Whether the cloudSqlInstance field is set.
     */
    @java.lang.Override
    public boolean hasCloudSqlInstance() {
      return volumeTypeCase_ == 3;
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     * @return The cloudSqlInstance.
     */
    @java.lang.Override
    public com.google.cloud.run.v2.CloudSqlInstance getCloudSqlInstance() {
      if (cloudSqlInstanceBuilder_ == null) {
        if (volumeTypeCase_ == 3) {
          return (com.google.cloud.run.v2.CloudSqlInstance) volumeType_;
        }
        return com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance();
      } else {
        if (volumeTypeCase_ == 3) {
          return cloudSqlInstanceBuilder_.getMessage();
        }
        return com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    public Builder setCloudSqlInstance(com.google.cloud.run.v2.CloudSqlInstance value) {
      if (cloudSqlInstanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        volumeType_ = value;
        onChanged();
      } else {
        cloudSqlInstanceBuilder_.setMessage(value);
      }
      volumeTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    public Builder setCloudSqlInstance(
        com.google.cloud.run.v2.CloudSqlInstance.Builder builderForValue) {
      if (cloudSqlInstanceBuilder_ == null) {
        volumeType_ = builderForValue.build();
        onChanged();
      } else {
        cloudSqlInstanceBuilder_.setMessage(builderForValue.build());
      }
      volumeTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    public Builder mergeCloudSqlInstance(com.google.cloud.run.v2.CloudSqlInstance value) {
      if (cloudSqlInstanceBuilder_ == null) {
        if (volumeTypeCase_ == 3 &&
            volumeType_ != com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance()) {
          volumeType_ = com.google.cloud.run.v2.CloudSqlInstance.newBuilder((com.google.cloud.run.v2.CloudSqlInstance) volumeType_)
              .mergeFrom(value).buildPartial();
        } else {
          volumeType_ = value;
        }
        onChanged();
      } else {
        if (volumeTypeCase_ == 3) {
          cloudSqlInstanceBuilder_.mergeFrom(value);
        } else {
          cloudSqlInstanceBuilder_.setMessage(value);
        }
      }
      volumeTypeCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    public Builder clearCloudSqlInstance() {
      if (cloudSqlInstanceBuilder_ == null) {
        if (volumeTypeCase_ == 3) {
          volumeTypeCase_ = 0;
          volumeType_ = null;
          onChanged();
        }
      } else {
        if (volumeTypeCase_ == 3) {
          volumeTypeCase_ = 0;
          volumeType_ = null;
        }
        cloudSqlInstanceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    public com.google.cloud.run.v2.CloudSqlInstance.Builder getCloudSqlInstanceBuilder() {
      return getCloudSqlInstanceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    @java.lang.Override
    public com.google.cloud.run.v2.CloudSqlInstanceOrBuilder getCloudSqlInstanceOrBuilder() {
      if ((volumeTypeCase_ == 3) && (cloudSqlInstanceBuilder_ != null)) {
        return cloudSqlInstanceBuilder_.getMessageOrBuilder();
      } else {
        if (volumeTypeCase_ == 3) {
          return (com.google.cloud.run.v2.CloudSqlInstance) volumeType_;
        }
        return com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     * </pre>
     *
     * <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.cloud.run.v2.CloudSqlInstance, com.google.cloud.run.v2.CloudSqlInstance.Builder, com.google.cloud.run.v2.CloudSqlInstanceOrBuilder> 
        getCloudSqlInstanceFieldBuilder() {
      if (cloudSqlInstanceBuilder_ == null) {
        if (!(volumeTypeCase_ == 3)) {
          volumeType_ = com.google.cloud.run.v2.CloudSqlInstance.getDefaultInstance();
        }
        cloudSqlInstanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.run.v2.CloudSqlInstance, com.google.cloud.run.v2.CloudSqlInstance.Builder, com.google.cloud.run.v2.CloudSqlInstanceOrBuilder>(
                (com.google.cloud.run.v2.CloudSqlInstance) volumeType_,
                getParentForChildren(),
                isClean());
        volumeType_ = null;
      }
      volumeTypeCase_ = 3;
      onChanged();;
      return cloudSqlInstanceBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.run.v2.Volume)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.run.v2.Volume)
  private static final com.google.cloud.run.v2.Volume DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.run.v2.Volume();
  }

  public static com.google.cloud.run.v2.Volume getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Volume>
      PARSER = new com.google.protobuf.AbstractParser<Volume>() {
    @java.lang.Override
    public Volume parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Volume(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Volume> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Volume> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.run.v2.Volume getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

