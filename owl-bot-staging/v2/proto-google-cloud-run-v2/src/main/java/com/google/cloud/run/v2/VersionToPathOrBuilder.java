// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/run/v2/k8s.min.proto

package com.google.cloud.run.v2;

public interface VersionToPathOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.run.v2.VersionToPath)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The relative path of the secret in the container.
   * </pre>
   *
   * <code>string path = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <pre>
   * Required. The relative path of the secret in the container.
   * </pre>
   *
   * <code>string path = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * The Cloud Secret Manager secret version.
   * Can be 'latest' for the latest value or an integer for a specific version.
   * </pre>
   *
   * <code>string version = 2;</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * The Cloud Secret Manager secret version.
   * Can be 'latest' for the latest value or an integer for a specific version.
   * </pre>
   *
   * <code>string version = 2;</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * Integer octal mode bits to use on this file, must be a value between
   * 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be
   * used.
   * Notes
   * * Internally, a umask of 0222 will be applied to any non-zero value.
   * * This is an integer representation of the mode bits. So, the octal
   * integer value should look exactly as the chmod numeric notation with a
   * leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or
   * 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or
   * 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493
   * (base-10).
   * * This might be in conflict with other options that affect the
   * file mode, like fsGroup, and the result can be other mode bits set.
   * </pre>
   *
   * <code>int32 mode = 3;</code>
   * @return The mode.
   */
  int getMode();
}
